# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
  release:
    types: [created]

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install, build, and test
      run: |
        # Build and test the project, then
        # deploy to Azure Web App.
        npm install
        npm run build --if-present
        npm run test --if-present
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
- name: Cache
  uses: actions/cache@v2.1.6
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    - name: Close Stale Issues
  uses: actions/stale@v3.0.19
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: # optional, default is ${{ github.token }}
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
    days-before-issue-stale: # optional
    # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
    days-before-pr-stale: # optional
    # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
    days-before-close: # optional, default is 7
    # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
    days-before-issue-close: # optional
    # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
    days-before-pr-close: # optional
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The label to apply when an issue is closed.
    close-issue-label: # optional
    # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-issue-labels: # optional, default is 
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The label to apply when a pull request is closed.
    close-pr-label: # optional
    # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-pr-labels: # optional, default is 
    # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
    exempt-milestones: # optional, default is 
    # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
    exempt-issue-milestones: # optional, default is 
    # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
    exempt-pr-milestones: # optional, default is 
    # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
    exempt-all-milestones: # optional, default is false
    # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
    exempt-all-issue-milestones: # optional, default is 
    # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
    exempt-all-pr-milestones: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    any-of-labels: # optional, default is 
    # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
    any-of-issue-labels: # optional, default is 
    # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
    any-of-pr-labels: # optional, default is 
    # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
    only-issue-labels: # optional, default is 
    # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
    only-pr-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues and pull requests when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
    remove-issue-stale-when-updated: # optional, default is true
    # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
    remove-pr-stale-when-updated: # optional, default is true
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional, default is false
    # The order to get issues or pull requests. Defaults to false, which is descending.
    ascending: # optional, default is false
    # Skip adding stale message when marking a pull request as stale.
    skip-stale-pr-message: # optional, default is false
    # Skip adding stale message when marking an issue as stale.
    skip-stale-issue-message: # optional, default is false
    # Delete the git branch after closing a stale pull request.
    delete-branch: # optional, default is false
    # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
    start-date: # optional, default is 
    # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
    exempt-assignees: # optional, default is 
    # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
    exempt-issue-assignees: # optional, default is 
    # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
    exempt-pr-assignees: # optional, default is 
    # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
    exempt-all-assignees: # optional, default is false
    # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
    exempt-all-issue-assignees: # optional, default is 
    # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
    exempt-all-pr-assignees: # optional, default is 
    # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
    enable-statistics: # optional, default is true
    - name: Setup Java JDK
  uses: actions/setup-java@v2.1.0
  with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: 
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package
    architecture: # optional, default is x64
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    - name: Download a Build Artifact
  uses: actions/download-artifact@v2.0.9
  with:
    # Artifact name
    name: # optional
    # Destination path
    path: # optional
    - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v1.8.0
  with:
    # Optional SDK version to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
    dotnet-version: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Whether prerelease versions should be matched with non-exact versions (for example 5.0.0-preview.6 being matched by 5, 5.0, 5.x or 5.0.x). Defaults to false if not provided.
    include-prerelease: # optional
    - name: Uberblatt
  # You may pin to the exact commit or the version.
  # uses: ottojo/uberblatt-action@5c0a0ee8cf7f367a8739ebce170b5b7387f28f34
  uses: ottojo/uberblatt-action@v6
  - name: Check Ansible Ubuntu eoan
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-eoan-action@e7bb67313a036d8a64da5feb60902365893bde03
  uses: roles-ansible/check-ansible-ubuntu-eoan-action@v0.4
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: Check Ansible Ubuntu bionic
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-bionic-action@77b162aae4603024d5eb9245c5c4ec639e512288
  uses: roles-ansible/check-ansible-ubuntu-bionic-action@v0.4
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: Check Ansible Ubuntu focal
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-focal-action@d25b854290daefec54e898a4b06fc25b3ae4b770
  uses: roles-ansible/check-ansible-ubuntu-focal-action@v0.4
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: Check Ansible Ubuntu disco
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-disco-action@2a7fe6e9ca0c979871c181ffd2d9aa154e7488df
  uses: roles-ansible/check-ansible-ubuntu-disco-action@v0.4
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: Check Ansible Ubuntu trusty
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-trusty-action@9a5d1a692455b1fed8deebe08b85c8da049de27f
  uses: roles-ansible/check-ansible-ubuntu-trusty-action@v0.4.1
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: Zip on Ubuntu
  # You may pin to the exact commit or the version.
  # uses: nguyenquyhy/zip-release@fce5aed7bef4f8e25cacc8d0c7bafd71c36fa9ea
  uses: nguyenquyhy/zip-release@v0.3.0
  with:
    # Filename for archive
    filename: # default is release.zip
    # Base path for archive files
    path: # optional, default is .
    # Working directory before zipping
    workingDirectory: # optional, default is .
    # List of excluded files/directories
    exclusions: # optional, default is 
    - name: Check Ansible Ubuntu latest
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-latest-action@5c775457431b589c763f6067bf688e9f45d4bd97
  uses: roles-ansible/check-ansible-ubuntu-latest-action@0.4.1
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: QuickJS for Ubuntu
  # You may pin to the exact commit or the version.
  # uses: quickjs-actions/quickjs-ubuntu@b7c3a40cd17acfa5ed64a253a1ac422856f25a73
  uses: quickjs-actions/quickjs-ubuntu@v1.0.0
  with:
    # Main script to run/compile
    mainFile: # default is main.js
    - name: Check Ansible Ubuntu xenial
  # You may pin to the exact commit or the version.
  # uses: roles-ansible/check-ansible-ubuntu-xenial-action@0a54f80e8455c57281f1224aec9cd179e5e963ab
  uses: roles-ansible/check-ansible-ubuntu-xenial-action@0.4.1
  with:
    # Paths to the ansible role or playbook you want to be tested.
For example './', 'roles/my_role/' or 'site.yml'

    targets: 
    # When testing playbooks you have to tell ansible
the group you that we write in our hosts file.
For example 'servers' or what group you are using
in the playbook you want to test!

    group: # optional
    # When testing playbooks you have to give us
one example host we should use to test your playbook.
For example 'server1.example.com'.
We only spawn one docker container that mean
we can only test one host at the time. Sorry

    hosts: # optional
    # When testing playbooks and you are using ansible galaxy,
you may be interested in installing your requirements
from ansible galaxy.
To do this please provide us either the role name directly
-> e.g. 'do1jlr.ansible_version'
or your requiements.yml file.
-> e.g. 'requirements.yml'

    requirements: # optional
    - name: Ansible 2.9.7 in Ubuntu 18.04
  # You may pin to the exact commit or the version.
  # uses: jawher/action-ansible@9659ef0c95367a31fcc178c91742bbcb87c5bc99
  uses: jawher/action-ansible@v2.9.7
  - name: Execute a script on separeted ubuntu environment
  # You may pin to the exact commit or the version.
  # uses: link-u/execute-on-separated-ubuntu@81a7051a8a49f97050fe374cc072711bd575064a
  uses: link-u/execute-on-separated-ubuntu@v1
  with:
    # Relative path of script to execute.
    script: 
    # Codename of ubuntu version, e.g. bionic, focal
    true: 
    - name: SAM Deploy Action For ubuntu-18.04
  # You may pin to the exact commit or the version.
  # uses: akasaka-tr/sam-deploy-action@4fecc0d477e77ab7d467625bf2d8feffa1e58bf1
  uses: akasaka-tr/sam-deploy-action@v1.0.1
  - name: Rust Cargo Deb Package Build (amd64, Ubuntu)
  # You may pin to the exact commit or the version.
  # uses: ebbflow-io/cargo-deb-amd64-ubuntu@10535fdef274ceb3c64916b052d0d59d94e97455
  uses: ebbflow-io/cargo-deb-amd64-ubuntu@1.0
  with:
    # build command
    cmd: # default is cargo deb --target=x86_64-unknown-linux-musl
    
